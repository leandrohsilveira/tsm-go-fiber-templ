package layout

import "github.com/leandrohsilveira/tsm/guards"
import "github.com/leandrohsilveira/tsm/components/button"
import "github.com/leandrohsilveira/tsm/components/dropdown"
import "github.com/leandrohsilveira/tsm/components/icon"

type NavbarProps struct {
	Info  *guards.CurrentUserDto
	Class string
}

templ Navbar(props NavbarProps) {
	<nav class={ "w-full p-4 bg-primary text-primary-foreground flex items-center justify-center", props.Class }>
		<header class="flex w-full max-w-5xl gap-4 items-center justify-between">
			<h1>TSM</h1>
			if props.Info != nil {
				@dropdown.Dropdown() {
					@dropdown.Trigger() {
						@button.Button(button.Props{
							Class:      "flex gap-2 items-center",
							Attributes: templ.Attributes{"tabindex": "0"},
						}) {
							@icon.CircleUserRound()
							{ props.Info.Name }
						}
					}
					@dropdown.Content() {
						@dropdown.Label() {
							My Account
						}
						@dropdown.Group() {
							@dropdown.Label(dropdown.LabelProps{Class: "flex items-center justify-start gap-2 font-normal"}) {
								@icon.IdCard(icon.Props{Size: 16})
								{ props.Info.Name }
							}
							@dropdown.Label(dropdown.LabelProps{Class: "flex items-center justify-start gap-2 font-normal"}) {
								@icon.AtSign(icon.Props{Size: 16})
								{ props.Info.Email }
							}
						}
						@dropdown.Separator()
						@dropdown.Group() {
							@dropdown.Item(dropdown.ItemProps{Class: "flex items-center justify-start gap-2 cursor-pointer", Href: "/logout"}) {
								@icon.LogOut(icon.Props{Size: 16})
								Log out
							}
						}
					}
				}
			} else {
				@button.Button(button.Props{
					Href:       "/login",
					Attributes: templ.Attributes{"tabindex": "0"},
				}) {
					Login
				}
			}
		</header>
	</nav>
}
